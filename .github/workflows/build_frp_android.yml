name: Build FRP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Android builds
          - os: android
            arch: arm64-v8a
            goarch: arm64
            cc: aarch64-linux-android21-clang
          - os: android
            arch: armeabi-v7a
            goarch: arm
            cc: armv7a-linux-androideabi21-clang
          - os: android
            arch: x86
            goarch: 386
            cc: i686-linux-android21-clang
          - os: android
            arch: x86_64
            goarch: amd64
            cc: x86_64-linux-android21-clang
          # Windows build
          - os: windows
            arch: x86_64
            goarch: amd64
            extension: .exe
          # Linux build
          - os: linux
            arch: x86_64
            goarch: amd64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install Android NDK
      if: matrix.os == 'android'
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip android-ndk-r25c-linux.zip
        sudo mv android-ndk-r25c /usr/local/
        echo "ANDROID_NDK_HOME=/usr/local/android-ndk-r25c" >> $GITHUB_ENV

    - name: Set up environment
      run: |
        echo "GOPATH=$HOME/go" >> $GITHUB_ENV
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Build FRP
      env:
        CGO_ENABLED: 1
      run: |
        if [ "${{ matrix.os }}" = "android" ]; then
          export GOOS=android
          export GOARCH=${{ matrix.goarch }}
          export CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.cc }}
        elif [ "${{ matrix.os }}" = "windows" ]; then
          export GOOS=windows
          export GOARCH=${{ matrix.goarch }}
          export CGO_ENABLED=0
        else
          export GOOS=linux
          export GOARCH=${{ matrix.goarch }}
        fi
        
        go mod download
        go build -o frpc_${{ matrix.arch }}${{ matrix.extension || '' }} ./cmd/frpc
        go build -o frps_${{ matrix.arch }}${{ matrix.extension || '' }} ./cmd/frps

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frp-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          frpc_${{ matrix.arch }}${{ matrix.extension || '' }}
          frps_${{ matrix.arch }}${{ matrix.extension || '' }}
